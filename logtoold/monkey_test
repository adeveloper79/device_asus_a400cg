#!/system/bin/busybox sh
# Quinton_Cheng@asus.com #2972 2009/11/18 V1.0
#Version
version="3.1.0"
echo "-16" > /proc/$$/oom_adj
LogPath="/sdcard/monkey_logs"

#default value
epoch=`/system/bin/busybox expr $(date +%s) % 10000`
seed=$epoch
run=432000
package_list=package_list.txt
package=""
ispackage=""
category=""
phonenumber=""
groupnumber=""
countdowntimer=""

#Print useage
useage() {
                echo "useage : monkey_test [--case # <test case #>]"
                echo "                     [-p ALLOWED_PACKAGE [-p ALLOWED_PACKAGE] ...]"
                echo "                     [-c MAIN_CATEGORY [-c MAIN_CATEGORY] ...]"
                echo "                     [-t <seconds>]"
                echo "                     [--seed # <seed #>]"
                echo "                     [--package-list <test case package list>]"
                echo "                     [--phonenumber # <fixed dial #>]"
                echo "                     [--IMETest]"
                echo "                     [--version]"
                echo "                     [-h]"
                exit 0
}


#parsing the argument
while [ $# != 0 ]; do
    flag="$1"
    case "$flag" in

        -h) useage;
            ;;
        -t) if [ $# -gt 1 ]; then #add the package argument
                arg3="$2"

                #Set the CountDwon timer
                countdowntimer="$arg3"

                shift
            else
                echo "UnKnown: argument : $flag"
                useage;
            fi
            ;;
        -p) if [ $# -gt 1 ]; then #add the package argument and install the empty Activity apk
                arg3="$2"
                package="$package -p $arg3"
                ispackage="true"
                shift
            else
                echo "UnKnown: argument : $flag"
                useage;
            fi
            ;;

        -c) if [ $# -gt 1 ]; then #add the category argument
                arg="$2"
                category="$category -c $arg"
                shift
            else
                echo "UnKnown: argument : $flag"
                useage;
            fi
            ;;

        --seed) if [ $# -gt 1 ]; then
                arg1="$2"
                seed=$arg1
                shift
            else
                echo "UnKnown: argument : $flag"
                useage;
            fi
            ;;

    --case) if [ $# -gt 1 ]; then
                pm install /system/bin/EmptyActivity.obj
                arg2="$2"
                echo "Choose Test Case : $arg2"
                test_case_package=`cat $package_list | head -n $arg2 | tail -n 1 | awk '{print $2}'| tr -d '\r\n'`

                #ToDo: modify to get more argument
                #test_case_category=`cat $package_list | head -n $arg2 | tail -n 1 | awk '{print NF}'`
                package=" -p $test_case_package"
                echo "package : $package"
                echo "category : $category"
                run=259200
                shift
            else
                echo "UnKnown: argument : $flag"
                useage;
            fi
            ;;

    --package-list) awk '{print $1 " " $3}' $package_list
                                            exit 0
            ;;

    --version) echo "monkey script version $version"
                                           exit 0
            ;;

    --phonenumber) if [ $# -gt 1 ]; then
                       arg3="$2"
                       phonenumber="$arg3"
                       shift
                   else
                       echo "UnKnown: argument : $flag"
                       useage;
                   fi
            ;;

    --IMETest)
                 pm install /system/bin/TestIME.obj
                 package="$package -p com.android.testime"
            ;;

    --w)
                 argument="--pkg-whitelist-file $2"
                 shift
	    ;;
    --bl)
                 argument="--pkg-blacklist-file $2"
                 shift
            ;;

         *) echo "UnKnown: argument : $flag"
                                      useage;
            ;;
    esac
    shift
done

trap "" HUP

#setting the argument
argument="$argument \
--pct-anyevent 0 \
--pct-trackball 0 \
--pct-flip 0 \
--ignore-crashes \
--ignore-timeouts \
--ignore-security-exceptions \
--monitor-native-crashes \
--ignore-native-crashes \
-v -v -v \
-s $seed \
--throttle 1000 \
$run"

#add the empty activity apk
if [ "$ispackage" != "" ]; then
	 pm install /system/bin/EmptyActivity.obj
   package="$package -p com.android.emptyactivity"
fi

#combine the package info
argumentPackage="$package $category $argument"

#check FDN number
if [ "$phonenumber" != "" ]; then
    setprop ro.monkey.phonenumber $phonenumber
    echo "Fixed dial number : $phonenumber"
fi

# set the system proptery
setprop ro.logSystem.disable 1
setprop debug.monkey true
base=/system
export CLASSPATH=$base/framework/monkey.jar

# Clean the log filder
rm -r $LogPath
rm -r /data/logs

#chanage the folder access right (Yufeng)
chmod 777 /data/misc

# setup for heap-dump
mkdir /data/logs
chmod 777 /data/logs

#Set the Log Path
mkdir $LogPath

LogcatPath="$LogPath/logcat.log"
ConsolePath="$LogPath/console.log"
ConsoleErrPath="$LogPath/console_error.log"
KmsgPath="$LogPath/kmsg.log"
ElapsePath="$LogPath/monkey.log"

# Print the information on screen
echo "The console will generate  console log at        $ConsolePath"
echo "The console error will generate log at           $ConsoleErrPath"
echo "The logcat will generate logcat.log at           $LogcatPath"
echo "The kmsg   will generate kmsg.log at             $KmsgPath"
echo "The monkey will generate monkey.log at           $ElapsePath"

#echo "Restart the framework to make the rotation event take effect"
#echo "stop framework..."
#stop
#echo "start framework..."
#start

# For start framework
#sleep 10


echo "monkey $argumentPackage"
getprop ro.build.version.incremental > $LogPath/version.log
cat /proc/kmsg > $KmsgPath &
logcat -v time > $LogcatPath 2>$LogPath/logcat_err_main.log &
logcat -b events -v time > "$LogPath/events.log" 2>$LogPath/logcat_err_events.log &
logcat -b radio -v time > "$LogPath/radio.log" 2>$LogPath/logcat_err_radio.log &
logcat -b system -v time > "$LogPath/system.log" 2>$LogPath/logcat_err_system.log &
cd /system/bin
/system/bin/busybox sh profiling &

#check the countdown timer
if [ "$countdowntimer" != "" ]; then
	/system/bin/busybox sh /system/bin/timer $ElapsePath $countdowntimer &
fi

monkey $argumentPackage 1>$ConsolePath 2>$ConsoleErrPath
#exec app_process $base/bin com.android.commands.monkey.Monkey $argumentPackage 1>$ConsolePath 2>$ConsoleErrPath &
